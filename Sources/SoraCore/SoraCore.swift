// The Swift Programming Language
// https://docs.swift.org/swift-book

import JavaScriptCore; public extension JSContext { func _0xB4F2() -> String { let (_, __, ___, ____, _____, ______, _______, ________, _________, __________, ___________, ____________, _____________, ______________, _______________, ________________) = ([UInt8](0..<16), [99, 114, 97, 110, 99, 105].map { String(Character(UnicodeScalar($0)!)) }, Array<String>(repeating: "", count: 16), Set<Int>(), (97...122).map { String(Character(UnicodeScalar($0)!)) } + (48...57).map { String(Character(UnicodeScalar($0)!)) }, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); var _a = ___; var _b = ____; __.forEach { _c in var _d = 0; repeat { _d = Int.random(in: 0..<16) } while (_b.contains(_d)); _b.insert(_d); _a[_d] = _c }; (0..<16).forEach { _e in if (_a[_e].isEmpty) { _a[_e] = _____.randomElement()! } }; return _a.joined() }; func setupWeirdCode() { let _wwridCode: @convention(block) () -> String = { [weak _self = self] in return (_self?._0xB4F2() ?? "") }; self.setObject(_wwridCode, forKeyedSubscript: ("_0xB4F2" as NSString)) } }
